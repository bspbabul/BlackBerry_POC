version: "3"

services:
  rabbitmq:
    container_name: rabbitmq
    image: 'rabbitmq:3.12.0-rc.2-management'
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./definitions.json:/etc/rabbitmq/definitions.json:ro
    restart: unless-stopped
    networks:
     - mynetwork
    

  mysqldb:
    container_name: mysqldb
    image: mysql
    ports:
      - '3306:3306'
    environment:
      - MYSQL_DATABASE=bbtraining
      - MYSQL_ROOT_PASSWORD=bb123
    volumes:
      - ./mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      retries: 5
    networks:
     - mynetwork
    
     
  eureka-server:
    container_name: eureka-server
#    restart: always
    build:
     context: Eureka-Server
     dockerfile: Dockerfile
    ports:
     - 8761:8761
    depends_on:
      mysqldb:
        condition: service_healthy
    networks:
     - mynetwork
     
  api-gateway:
    container_name: API-Gateway
#    restart: always
    build:
     context: API-Gateway
     dockerfile: Dockerfile
    ports:
     - 9090:9090
    depends_on:
     - mysqldb
     - eureka-server
    networks:
     - mynetwork
   
  authorization-service:
    container_name: Authorization-service
#    restart: always
    build: 
     context: AuthorizationService
     dockerfile: Dockerfile 
    ports:
     - 8080:8080
    depends_on:
     - mysqldb
     - eureka-server
    networks:
     - mynetwork
     
  message-service:
    container_name: Message-service
#    restart: always
    build: 
     context: MessageService
     dockerfile: Dockerfile 
    ports:
     - 8083:8083
    depends_on:
     - mysqldb
     - eureka-server
    networks:
     - mynetwork  
     
  order-service:
    container_name: Order-service
#    restart: always
    build: 
     context: OrderService
     dockerfile: Dockerfile 
    ports:
     - 8081:8081
    depends_on:
     - mysqldb
     - eureka-server
    networks:
     - mynetwork
     
  payment-service:
    container_name: Payment-service
#    restart: always
    build: 
     context: PaymentService
     dockerfile: Dockerfile 
    ports:
     - 8082:8082
    depends_on:
     - mysqldb
     - eureka-server
    networks:
     - mynetwork
      
networks:
  mynetwork:
    driver: bridge
  
volumes:
  rabbitmq:
  mysql:
  